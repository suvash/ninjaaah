/*
-----------------------------------------------------------------------------
Filename:    Rand.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.7.x Application Wizard for VC10 (August 2010)
      http://code.google.com/p/ogreappwizards/
-----------------------------------------------------------------------------
*/
#ifndef __MapCreate_h_
#define __MapCreate_h_

#include "RandGen.h"
#include "BaseApplication.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#include "../res/resource.h"
#endif


class MapCreate
{
public:

	Ogre::Entity* floorEnt;
	Ogre::SceneNode* mFloorNode;
	std::vector<Ogre::SceneNode*> mFurnitureNode;
	std::vector<Ogre::SceneNode*> mWallNode;
	std::vector<std::vector<int>> map;
	Ogre::SceneNode* returnFloorNode();
	std::vector<Ogre::SceneNode*> returnWallNodeVec();
	std::vector<Ogre::SceneNode*> returnFurnitureNodeVec();
	
	bool mapFinished;

    MapCreate(Ogre::Root* mRoot,
			  Ogre::SceneManager* mSceneMgr,
			  int dim_x=150,
			  int dim_y=150,
			  int room_min_x=14,
			  int room_min_y=14,
			  int room_max_area=200,
			  int door_cnt=2,
			  bool furniture_enable=0,
			  int desk_cnt=1,
			  int chair_cnt=1,
			  int shelf_cnt=1,
			  int painting_cnt=1);

    ~MapCreate(void);
private:
	RandGen* mRandGen;
};

#endif // #ifndef __Rand_h_
